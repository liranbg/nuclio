name: Run action and validate environment

on:
  pull_request:
    branches:
      - development

env:
  REPO: docker.pkg.github.com
  NUCLIO_LABEL: ${{ github.sha }}
  FUNCTION_NAME: test-function
  NAMESPACE: nuclio
  NUCLIO_NUCTL_CREATE_SYMLINK: false
  NUCLIO_DOCKER_REPO: docker.pkg.github.com/${{ github.actor }}/nuclio

jobs:
  build_nuctl:
    name: Build nuctl
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-go@v2-beta
        with:
          go-version: '^1.11.0'

      - name: Build nuctl
        run: |
          make nuctl
          sudo mv $(go env GOPATH)/bin/nuctl-$NUCLIO_LABEL-linux-amd64 nuctl
          sudo chmod +x nuctl
          ./nuctl version

      - name: Upload nuctl
        uses: actions/upload-artifact@v1
        with:
          name: nuctl
          path: nuctl

  build_services:
    name: Build nuclio services
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build nuclio services
        run: |
          docker login $REPO -u ${{ github.actor }} -p ${{ github.token }}
          make controller dashboard handler-builder-golang-onbuild
          docker push $NUCLIO_DOCKER_REPO/dashboard:$NUCLIO_LABEL-amd64
          docker push $NUCLIO_DOCKER_REPO/controller:$NUCLIO_LABEL-amd64
          docker push $NUCLIO_DOCKER_REPO/handler-builder-golang-onbuild:$NUCLIO_LABEL-amd64-alpine

  nuctl_deploy_invoke:
    name: Deploy and invoke function using nuctl
    needs:
      - build_services
      - build_nuctl
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      # Install helm
      - uses: azure/setup-helm@v1
        with:
          version: 'v3.1.2'

      # Setup minikube + k8s
      - uses: manusa/actions-setup-minikube@v1.0.1
        with:
          minikube version: 'v1.9.0'
          kubernetes version: 'v1.17.3'
          github token: ${{ github.token }}

      - name: Download nuctl from job
        uses: actions/download-artifact@v1
        with:
          name: nuctl

      - name: Prepare
        run: |
          kubectl create namespace $NAMESPACE
          docker run -d -p 5000:5000 registry:2
          docker login $REPO -u ${{ github.actor }} -p ${{ github.token }}
          docker pull $NUCLIO_DOCKER_REPO/controller:$NUCLIO_LABEL-amd64
          docker pull $NUCLIO_DOCKER_REPO/dashboard:$NUCLIO_LABEL-amd64
          docker pull $NUCLIO_DOCKER_REPO/handler-builder-golang-onbuild:$NUCLIO_LABEL-amd64-alpine

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v2

      - name: Install nuclio using helm
        run: |
          cat << EOF | helm install --debug --wait --namespace $NAMESPACE -f - nuclio hack/k8s/helm/nuclio/
          controller:
            image:
              tag: $NUCLIO_LABEL-amd64
              repository: $NUCLIO_DOCKER_REPO/controller
              pullPolicy: Never
          dashboard:
            image:
              tag: $NUCLIO_LABEL-amd64
              repository: $NUCLIO_DOCKER_REPO/dashboard
              pullPolicy: Never
          registry:
            defaultOnbuildRegistryURL: $NUCLIO_DOCKER_REPO
          EOF

      - name: Deploy function
        run: |
          ./nuctl --verbose \
            deploy $FUNCTION_NAME \
            --path https://raw.githubusercontent.com/nuclio/nuclio/master/hack/examples/golang/helloworld/helloworld.go \
            --registry localhost:5000 \
            --run-registry localhost:5000 \
            --namespace $NAMESPACE \
            --no-pull

      - name: Invoke function
        run: |
          ./nuctl invoke $FUNCTION_NAME \
            --namespace $NAMESPACE
